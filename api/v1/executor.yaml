openapi: 3.0.1
info:
  title: Kubetest Executor
  description: Executor API reference for KubeTest
  termsOfService: http://kubetest.io/terms/
  contact:
    email: api@kubetest.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1
externalDocs:
  description: 'Find out more about Kubetest'
  url: http://kubetest.io
servers:
- url: https://api.kubetest.io/v1
tags:
- name: executor
  description: 'Scripts execution' 

paths:
  /executions/:
    post:
      tags:
      - executor
      summary: 'Starts script execution'
      description: 'Starts script execution, returns pending execution with ID'
      operationId: executueScript
      responses:
        201:
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionResult'
  /executions/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: 'ID of the execution'
      tags:
      - executor
      summary: 'Get execution by ID'
      description: 'Gets execution with given ID, returns deailed information about test execution'
      operationId: getExecution
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionResult'
                  
components:
  schemas:
    ExecutionResult:
      type: object
      properties:
        id:
          type: string
          description: execution id (UUID?)
          format: uuid
        script-type:
          type: string
          description: script type e.g. postman-collection
        name:
          type: string
          description: 'execution name'
        status: 
          type: string
          description: 'execution status'
          enum: 
          - queued
          - pending 
          - success 
          - failed
        output:
          type: string
          description: 'RAW Script execution output, depends of reporter used in particular tool'
        output-type:
          type: string
          description: 'output type depends of reporter used in partucular tool'
          enum: 
          - text
          - junit
          - json
        output-content-type: 
          type: string
          description: 'result content-type e.g. application/json'
        start-time:
          type: string
          description: 'test start time'
          format: date-time
        end-time:
          type: string
          description: 'test end time'
          format: date-time
