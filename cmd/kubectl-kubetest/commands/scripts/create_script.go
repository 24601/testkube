package scripts

import (
	"io/ioutil"

	"github.com/kubeshop/kubetest/pkg/api/client"
	"github.com/kubeshop/kubetest/pkg/ui"
	"github.com/spf13/cobra"
)

func init() {
	// TODO find a good way to handle short flags
	CreateScriptsCmd.Flags().String("name", "", "execution name, if empty will be autogenerated")
	CreateScriptsCmd.Flags().String("file", "", "execution name, if empty will be autogenerated")
	CreateScriptsCmd.Flags().String("type", "postman/collection", "script type (defaults to postman-collection)")
	CreateScriptsCmd.Flags().String("namespace", "default", "script type (defaults to postman-collection)")
}

var CreateScriptsCmd = &cobra.Command{
	Use:   "create",
	Short: "Create new script",
	Long:  `Create new Script Custom Resource, `,
	Run: func(cmd *cobra.Command, args []string) {
		name := cmd.Flag("name").Value.String()
		namespace := cmd.Flag("namespace").Value.String()
		executorType := cmd.Flag("type").Value.String()
		file := cmd.Flag("file").Value.String()

		content, err := ioutil.ReadFile(file)
		ui.ExitOnError("reading file"+file, err)

		client := client.NewScriptsAPI(client.DefaultURI)
		script, err := client.Create(name, executorType, string(content), namespace)
		ui.ExitOnError("creating script "+name, err)
		ui.Info("Script created", script.Name)

	},
}
